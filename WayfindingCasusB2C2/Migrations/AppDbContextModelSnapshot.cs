// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WayfindingCasusB2C2.Data;

#nullable disable

namespace WayfindingCasusB2C2.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BedrijfRuimte", b =>
                {
                    b.Property<int>("BedrijfsBedrijfId")
                        .HasColumnType("int");

                    b.Property<int>("RuimtesRuimteId")
                        .HasColumnType("int");

                    b.HasKey("BedrijfsBedrijfId", "RuimtesRuimteId");

                    b.HasIndex("RuimtesRuimteId");

                    b.ToTable("BedrijfRuimte");
                });

            modelBuilder.Entity("WayfindingCasusB2C2.Models.Bedrijf", b =>
                {
                    b.Property<int>("BedrijfId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BedrijfId"), 1L, 1);

                    b.Property<int>("BedrijfDetailDetailsId")
                        .HasColumnType("int");

                    b.Property<int>("DetailsId")
                        .HasColumnType("int");

                    b.HasKey("BedrijfId");

                    b.HasIndex("BedrijfDetailDetailsId");

                    b.ToTable("tblBedrijf");
                });

            modelBuilder.Entity("WayfindingCasusB2C2.Models.BedrijfDetail", b =>
                {
                    b.Property<int>("DetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DetailsId"), 1L, 1);

                    b.Property<string>("BedrijfBeschrijving")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BedrijfDoelen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BedrijfEigenaar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BedrijfMedewerkers")
                        .HasColumnType("int");

                    b.Property<string>("BedrijfNaam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BedrijfOpgerichtJaar")
                        .HasColumnType("int");

                    b.HasKey("DetailsId");

                    b.ToTable("tblBedrijfDetail");
                });

            modelBuilder.Entity("WayfindingCasusB2C2.Models.Gebruiker", b =>
                {
                    b.Property<int>("GebruikerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GebruikerId"), 1L, 1);

                    b.Property<int?>("BedrijfId")
                        .HasColumnType("int");

                    b.Property<string>("GebruikerEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GebruikerGeslacht")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GebruikerLeeftijd")
                        .HasColumnType("int");

                    b.Property<string>("GebruikerNaam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RuimteId")
                        .HasColumnType("int");

                    b.HasKey("GebruikerId");

                    b.HasIndex("BedrijfId");

                    b.HasIndex("RuimteId");

                    b.ToTable("tblGebruiker");
                });

            modelBuilder.Entity("WayfindingCasusB2C2.Models.Legenda", b =>
                {
                    b.Property<int>("LegendaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LegendaId"), 1L, 1);

                    b.Property<string>("LegendaBeschrijving")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LegendaItem")
                        .HasColumnType("int");

                    b.HasKey("LegendaId");

                    b.ToTable("tblLegenda");
                });

            modelBuilder.Entity("WayfindingCasusB2C2.Models.Plattegrond", b =>
                {
                    b.Property<int>("PlattegrondId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlattegrondId"), 1L, 1);

                    b.Property<int>("BedrijfId")
                        .HasColumnType("int");

                    b.Property<int>("LegendaId")
                        .HasColumnType("int");

                    b.Property<int>("PlattegrondVerdieping")
                        .HasColumnType("int");

                    b.Property<int>("RouteId")
                        .HasColumnType("int");

                    b.Property<int>("RuimteId")
                        .HasColumnType("int");

                    b.HasKey("PlattegrondId");

                    b.HasIndex("BedrijfId");

                    b.HasIndex("LegendaId");

                    b.HasIndex("RouteId");

                    b.HasIndex("RuimteId");

                    b.ToTable("tblPlattegrond");
                });

            modelBuilder.Entity("WayfindingCasusB2C2.Models.Route", b =>
                {
                    b.Property<int>("RouteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RouteId"), 1L, 1);

                    b.Property<int>("LocatieId")
                        .HasColumnType("int");

                    b.Property<string>("RouteBeschrijving")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RouteId");

                    b.ToTable("tblRoute");
                });

            modelBuilder.Entity("WayfindingCasusB2C2.Models.Ruimte", b =>
                {
                    b.Property<int>("RuimteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RuimteId"), 1L, 1);

                    b.Property<bool>("RuimteBezet")
                        .HasColumnType("bit");

                    b.Property<int>("RuimteBezoekers")
                        .HasColumnType("int");

                    b.Property<int>("RuimteOppervlakte")
                        .HasColumnType("int");

                    b.HasKey("RuimteId");

                    b.ToTable("tblRuimte");
                });

            modelBuilder.Entity("BedrijfRuimte", b =>
                {
                    b.HasOne("WayfindingCasusB2C2.Models.Bedrijf", null)
                        .WithMany()
                        .HasForeignKey("BedrijfsBedrijfId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WayfindingCasusB2C2.Models.Ruimte", null)
                        .WithMany()
                        .HasForeignKey("RuimtesRuimteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WayfindingCasusB2C2.Models.Bedrijf", b =>
                {
                    b.HasOne("WayfindingCasusB2C2.Models.BedrijfDetail", "BedrijfDetail")
                        .WithMany("Bedrijfs")
                        .HasForeignKey("BedrijfDetailDetailsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BedrijfDetail");
                });

            modelBuilder.Entity("WayfindingCasusB2C2.Models.Gebruiker", b =>
                {
                    b.HasOne("WayfindingCasusB2C2.Models.Bedrijf", "Bedrijf")
                        .WithMany("Gebruikeres")
                        .HasForeignKey("BedrijfId");

                    b.HasOne("WayfindingCasusB2C2.Models.Ruimte", "Ruimte")
                        .WithMany("Gebruikers")
                        .HasForeignKey("RuimteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bedrijf");

                    b.Navigation("Ruimte");
                });

            modelBuilder.Entity("WayfindingCasusB2C2.Models.Plattegrond", b =>
                {
                    b.HasOne("WayfindingCasusB2C2.Models.Bedrijf", "Bedrijf")
                        .WithMany("Plattegronds")
                        .HasForeignKey("BedrijfId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WayfindingCasusB2C2.Models.Legenda", "Legenda")
                        .WithMany("Plattegronds")
                        .HasForeignKey("LegendaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WayfindingCasusB2C2.Models.Route", "Route")
                        .WithMany("Plattegronds")
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WayfindingCasusB2C2.Models.Ruimte", "Ruimte")
                        .WithMany("Plattegronds")
                        .HasForeignKey("RuimteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bedrijf");

                    b.Navigation("Legenda");

                    b.Navigation("Route");

                    b.Navigation("Ruimte");
                });

            modelBuilder.Entity("WayfindingCasusB2C2.Models.Bedrijf", b =>
                {
                    b.Navigation("Gebruikeres");

                    b.Navigation("Plattegronds");
                });

            modelBuilder.Entity("WayfindingCasusB2C2.Models.BedrijfDetail", b =>
                {
                    b.Navigation("Bedrijfs");
                });

            modelBuilder.Entity("WayfindingCasusB2C2.Models.Legenda", b =>
                {
                    b.Navigation("Plattegronds");
                });

            modelBuilder.Entity("WayfindingCasusB2C2.Models.Route", b =>
                {
                    b.Navigation("Plattegronds");
                });

            modelBuilder.Entity("WayfindingCasusB2C2.Models.Ruimte", b =>
                {
                    b.Navigation("Gebruikers");

                    b.Navigation("Plattegronds");
                });
#pragma warning restore 612, 618
        }
    }
}
